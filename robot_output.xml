<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.1 (Python 3.8.10 on linux)" generated="20220602 02:54:54.570" rpa="false" schemaversion="2">
<suite id="s1" name="Test Suite" source="/__w/qpc-zephyr-integration/qpc-zephyr-integration/tests.robot">
<kw name="Setup" library="renode-keywords" type="SETUP">
<msg timestamp="20220602 02:54:16.606" level="TRACE">Arguments: [  ]</msg>
<kw name="Evaluate" library="BuiltIn">
<var>${SYSTEM}</var>
<arg>platform.system()</arg>
<arg>modules=platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220602 02:54:16.606" level="TRACE">Arguments: [ 'platform.system()' | modules='platform' ]</msg>
<msg timestamp="20220602 02:54:16.611" level="TRACE">Return: 'Linux'</msg>
<msg timestamp="20220602 02:54:16.611" level="INFO">${SYSTEM} = Linux</msg>
<status status="PASS" starttime="20220602 02:54:16.606" endtime="20220602 02:54:16.611"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${CONFIGURATION}</var>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG}</arg>
<arg>Debug</arg>
<arg>${CONFIGURATION}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220602 02:54:16.612" level="TRACE">Arguments: [ 'not True and False' | 'Debug' | '${CONFIGURATION}' ]</msg>
<msg timestamp="20220602 02:54:16.612" level="TRACE">Return: 'Release'</msg>
<msg timestamp="20220602 02:54:16.612" level="INFO">${CONFIGURATION} = Release</msg>
<status status="PASS" starttime="20220602 02:54:16.612" endtime="20220602 02:54:16.612"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{PARAMS}</var>
<arg>--robot-server-port</arg>
<arg>${PORT_NUMBER}</arg>
<arg>--hide-log</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220602 02:54:16.613" level="TRACE">Arguments: [ '--robot-server-port' | '9999' | '--hide-log' ]</msg>
<msg timestamp="20220602 02:54:16.613" level="TRACE">Return: ['--robot-server-port', '9999', '--hide-log']</msg>
<msg timestamp="20220602 02:54:16.613" level="INFO">@{PARAMS} = [ --robot-server-port | 9999 | --hide-log ]</msg>
<status status="PASS" starttime="20220602 02:54:16.612" endtime="20220602 02:54:16.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${DISABLE_XWT}</arg>
<arg>Insert Into List</arg>
<arg>${PARAMS}</arg>
<arg>0</arg>
<arg>--disable-xwt</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:16.613" level="TRACE">Arguments: [ 'False' | 'Insert Into List' | '${PARAMS}' | '0' | '--disable-xwt' ]</msg>
<msg timestamp="20220602 02:54:16.613" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:16.613" endtime="20220602 02:54:16.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${SKIP_RUNNING_SERVER}</arg>
<arg>File Should Exist</arg>
<arg>${DIRECTORY}/${BINARY_NAME}</arg>
<arg>msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:16.613" level="TRACE">Arguments: [ 'not True' | 'File Should Exist' | '${DIRECTORY}/${BINARY_NAME}' | 'msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?' ]</msg>
<msg timestamp="20220602 02:54:16.614" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:16.613" endtime="20220602 02:54:16.614"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:16.614" level="TRACE">Arguments: [ "not True and not False and not 'Linux' == 'Windows'" | 'Start Process' | 'mono' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20220602 02:54:16.614" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:16.614" endtime="20220602 02:54:16.614"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<arg>shell=true</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:16.614" level="TRACE">Arguments: [ "not True and not False and 'Linux' == 'Windows'" | 'Start Process' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' | 'shell=true' ]</msg>
<msg timestamp="20220602 02:54:16.615" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:16.614" endtime="20220602 02:54:16.615"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>--debug</arg>
<arg>--debugger-agent\=transport\=dt_socket,address\=0.0.0.0:${SERVER_REMOTE_PORT},server\=y,suspend\=${SERVER_REMOTE_SUSPEND}</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:16.615" level="TRACE">Arguments: [ "not True and False and not 'Linux' == 'Windows'" | 'Start Process' | 'mono' | '--debug' | '--debugger-agent\\=transport\\=dt_socket,address\\=0.0.0.0:${SERVER_REMOTE_PORT},server\\=y,suspend\\=${SERVER_REMOTE_SUSPEND}' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20220602 02:54:16.615" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:16.615" endtime="20220602 02:54:16.615"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Fatal Error</arg>
<arg>Windows doesn't support server remote debug option.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:16.615" level="TRACE">Arguments: [ "not True and False and 'Linux' == 'Windows'" | 'Fatal Error' | "Windows doesn't support server remote debug option." ]</msg>
<msg timestamp="20220602 02:54:16.615" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:16.615" endtime="20220602 02:54:16.615"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not '${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:16.616" level="TRACE">Arguments: [ "not 'Linux' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<msg timestamp="20220602 02:54:16.616" level="TRACE">Arguments: [ '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20220602 02:54:16.616" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20220602 02:54:16.623" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20220602 02:54:16.623" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20220602 02:54:16.616" endtime="20220602 02:54:16.623"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20220602 02:54:17.623" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20220602 02:54:17.625" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20220602 02:54:17.625" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20220602 02:54:17.623" endtime="20220602 02:54:17.625"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20220602 02:54:18.626" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20220602 02:54:18.627" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20220602 02:54:18.627" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20220602 02:54:18.625" endtime="20220602 02:54:18.627"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20220602 02:54:19.627" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20220602 02:54:19.629" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20220602 02:54:19.629" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20220602 02:54:19.627" endtime="20220602 02:54:19.629"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20220602 02:54:20.629" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20220602 02:54:20.937" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:20.629" endtime="20220602 02:54:20.937"/>
</kw>
<msg timestamp="20220602 02:54:20.937" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:16.616" endtime="20220602 02:54:20.937"/>
</kw>
<msg timestamp="20220602 02:54:20.937" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:16.616" endtime="20220602 02:54:20.937"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://localhost:${PORT_NUMBER}/</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:20.937" level="TRACE">Arguments: [ "'Linux' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://localhost:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20220602 02:54:20.937" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:20.937" endtime="20220602 02:54:20.937"/>
</kw>
<kw name="Set Default Uart Timeout" library="Remote">
<arg>${DEFAULT_UART_TIMEOUT}</arg>
<msg timestamp="20220602 02:54:20.938" level="TRACE">Arguments: [ '8' ]</msg>
<msg timestamp="20220602 02:54:20.962" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:20.938" endtime="20220602 02:54:20.962"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${SAVE_LOG_ON_FAIL}</arg>
<arg>Enable Logging To Cache</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:20.963" level="TRACE">Arguments: [ 'True' | 'Enable Logging To Cache' ]</msg>
<kw name="Enable Logging To Cache" library="Remote">
<msg timestamp="20220602 02:54:20.963" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:20.968" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:20.963" endtime="20220602 02:54:20.968"/>
</kw>
<msg timestamp="20220602 02:54:20.968" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:20.963" endtime="20220602 02:54:20.969"/>
</kw>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20220602 02:54:20.969" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:20.983" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:20.969" endtime="20220602 02:54:20.983"/>
</kw>
<msg timestamp="20220602 02:54:20.983" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:16.606" endtime="20220602 02:54:20.983"/>
</kw>
<test id="s1-t1" name="Should Run Hello QPc sample">
<kw name="Reset Emulation" library="Remote" type="SETUP">
<msg timestamp="20220602 02:54:20.984" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:20.986" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:20.984" endtime="20220602 02:54:20.986"/>
</kw>
<kw name="Prepare Sample">
<arg>%{ZEPHYR_QPC_HELLO}</arg>
<msg timestamp="20220602 02:54:20.987" level="TRACE">Arguments: [ ${sample_name}='/__w/qpc-zephyr-integration/qpc-zephyr-integration/qpc-zephyr-port/apps/hello/build/zephyr/zephyr.elf' ]</msg>
<kw name="Execute Command" library="Remote">
<arg>$bin="${sample_name}"</arg>
<msg timestamp="20220602 02:54:20.987" level="TRACE">Arguments: [ '$bin="/__w/qpc-zephyr-integration/qpc-zephyr-integration/qpc-zephyr-port/apps/hello/build/zephyr/zephyr.elf"' ]</msg>
<msg timestamp="20220602 02:54:21.002" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:20.987" endtime="20220602 02:54:21.002"/>
</kw>
<kw name="Execute Script" library="Remote">
<arg>${SCRIPT}</arg>
<msg timestamp="20220602 02:54:21.002" level="TRACE">Arguments: [ '/__w/qpc-zephyr-integration/qpc-zephyr-integration/nrf52840.resc' ]</msg>
<msg timestamp="20220602 02:54:23.746" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:21.002" endtime="20220602 02:54:23.746"/>
</kw>
<kw name="Create Terminal Tester" library="Remote">
<arg>${UART}</arg>
<msg timestamp="20220602 02:54:23.746" level="TRACE">Arguments: [ 'sysbus.uart0' ]</msg>
<msg timestamp="20220602 02:54:23.755" level="TRACE">Return: 0</msg>
<status status="PASS" starttime="20220602 02:54:23.746" endtime="20220602 02:54:23.755"/>
</kw>
<msg timestamp="20220602 02:54:23.755" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:20.986" endtime="20220602 02:54:23.755"/>
</kw>
<kw name="Start Emulation" library="Remote">
<msg timestamp="20220602 02:54:23.755" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:23.880" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:23.755" endtime="20220602 02:54:23.880"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Hello QPc</arg>
<msg timestamp="20220602 02:54:23.880" level="TRACE">Arguments: [ 'Hello QPc' ]</msg>
<msg timestamp="20220602 02:54:23.914" level="TRACE">Return: {'groups': [], 'line': 'Hello QPc', 'timestamp': 0.259}</msg>
<status status="PASS" starttime="20220602 02:54:23.880" endtime="20220602 02:54:23.914"/>
</kw>
<kw name="Test Teardown" library="renode-keywords" type="TEARDOWN">
<msg timestamp="20220602 02:54:23.915" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${CREATE_SNAPSHOT_ON_FAIL}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Create Snapshot Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:23.915" level="TRACE">Arguments: [ 'True' | 'Run Keyword If Test Failed' | 'Create Snapshot Of Failed Test' ]</msg>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Create Snapshot Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<msg timestamp="20220602 02:54:23.916" level="TRACE">Arguments: [ 'Create Snapshot Of Failed Test' ]</msg>
<msg timestamp="20220602 02:54:23.916" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:23.915" endtime="20220602 02:54:23.916"/>
</kw>
<msg timestamp="20220602 02:54:23.916" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:23.915" endtime="20220602 02:54:23.916"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${SAVE_LOG_ON_FAIL}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Save Log Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:23.916" level="TRACE">Arguments: [ 'True' | 'Run Keyword If Test Failed' | 'Save Log Of Failed Test' ]</msg>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Save Log Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<msg timestamp="20220602 02:54:23.916" level="TRACE">Arguments: [ 'Save Log Of Failed Test' ]</msg>
<msg timestamp="20220602 02:54:23.916" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:23.916" endtime="20220602 02:54:23.916"/>
</kw>
<msg timestamp="20220602 02:54:23.916" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:23.916" endtime="20220602 02:54:23.916"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${res}</var>
<arg>Import Library</arg>
<arg>Dialogs</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<msg timestamp="20220602 02:54:23.917" level="TRACE">Arguments: [ 'Import Library' | 'Dialogs' ]</msg>
<kw name="Import Library" library="BuiltIn">
<arg>Dialogs</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20220602 02:54:23.917" level="TRACE">Arguments: [ 'Dialogs' ]</msg>
<msg timestamp="20220602 02:54:23.918" level="TRACE">Return: None</msg>
<msg timestamp="20220602 02:54:23.918" level="FAIL">Importing library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'
Traceback (most recent call last):
  None
PYTHONPATH:
  /__w/_temp/renode/tests
  /usr/lib/python38.zip
  /usr/lib/python3.8
  /usr/lib/python3.8/lib-dynload
  /usr/local/lib/python3.8/dist-packages
  /usr/lib/python3/dist-packages</msg>
<msg timestamp="20220602 02:54:23.918" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20220602 02:54:23.917" endtime="20220602 02:54:23.918"/>
</kw>
<msg timestamp="20220602 02:54:23.919" level="TRACE">Return: ('FAIL',
 "Importing library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'\nTraceback (most recent call last):\n  None\nPYTHONPATH:\n  /__w/_temp/renode/tests\n  /usr/lib/python38.zip\n  /usr/lib/python3.8\n  /usr/lib/python3.8/lib-dynload\n  /usr/local/lib/python3.8/dist-packages\n  /usr/lib/python3/dist-packages")</msg>
<msg timestamp="20220602 02:54:23.919" level="INFO">${res} = ('FAIL', "Importing library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'\nTraceback (most recent call last):\n  None\nPYTHONPATH:\n  /__w/_temp/renode/tests\n  /usr...</msg>
<status status="PASS" starttime="20220602 02:54:23.916" endtime="20220602 02:54:23.919"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${HOLD_ON_ERROR}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Run Keywords</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' == 'FAIL'</arg>
<arg>Log</arg>
<arg>Couldn't load the Dialogs library - interactive debugging is not possible</arg>
<arg>console=True</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Open GUI</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Pause Execution</arg>
<arg>Test failed. Press OK once done debugging.</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Close GUI</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:23.919" level="TRACE">Arguments: [ 'False' | 'Run Keyword If Test Failed' | 'Run Keywords' | 'Run Keyword If' | "'${res[0]}' == 'FAIL'" | 'Log' | "Couldn't load the Dialogs library - interactive debugging is not possible" | 'console=True' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Open GUI' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Pause Execution' | 'Test failed. Press OK once done debugging.' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Close GUI' ]</msg>
<msg timestamp="20220602 02:54:23.919" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:23.919" endtime="20220602 02:54:23.919"/>
</kw>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20220602 02:54:23.919" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:23.948" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:23.919" endtime="20220602 02:54:23.948"/>
</kw>
<kw name="Clear Cached Log" library="Remote">
<msg timestamp="20220602 02:54:23.949" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:23.953" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:23.948" endtime="20220602 02:54:23.953"/>
</kw>
<msg timestamp="20220602 02:54:23.953" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:23.915" endtime="20220602 02:54:23.953"/>
</kw>
<status status="PASS" starttime="20220602 02:54:20.983" endtime="20220602 02:54:23.953"/>
</test>
<test id="s1-t2" name="Should Run Blinky QPc sample">
<kw name="Reset Emulation" library="Remote" type="SETUP">
<msg timestamp="20220602 02:54:23.954" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:23.956" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:23.954" endtime="20220602 02:54:23.956"/>
</kw>
<kw name="Prepare Sample">
<arg>%{ZEPHYR_QPC_BLINKY}</arg>
<msg timestamp="20220602 02:54:23.957" level="TRACE">Arguments: [ ${sample_name}='/__w/qpc-zephyr-integration/qpc-zephyr-integration/qpc-zephyr-port/apps/blinky/build/zephyr/zephyr.elf' ]</msg>
<kw name="Execute Command" library="Remote">
<arg>$bin="${sample_name}"</arg>
<msg timestamp="20220602 02:54:23.957" level="TRACE">Arguments: [ '$bin="/__w/qpc-zephyr-integration/qpc-zephyr-integration/qpc-zephyr-port/apps/blinky/build/zephyr/zephyr.elf"' ]</msg>
<msg timestamp="20220602 02:54:23.959" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:23.957" endtime="20220602 02:54:23.959"/>
</kw>
<kw name="Execute Script" library="Remote">
<arg>${SCRIPT}</arg>
<msg timestamp="20220602 02:54:23.959" level="TRACE">Arguments: [ '/__w/qpc-zephyr-integration/qpc-zephyr-integration/nrf52840.resc' ]</msg>
<msg timestamp="20220602 02:54:24.234" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:23.959" endtime="20220602 02:54:24.235"/>
</kw>
<kw name="Create Terminal Tester" library="Remote">
<arg>${UART}</arg>
<msg timestamp="20220602 02:54:24.235" level="TRACE">Arguments: [ 'sysbus.uart0' ]</msg>
<msg timestamp="20220602 02:54:24.237" level="TRACE">Return: 0</msg>
<status status="PASS" starttime="20220602 02:54:24.235" endtime="20220602 02:54:24.237"/>
</kw>
<msg timestamp="20220602 02:54:24.237" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:23.957" endtime="20220602 02:54:24.237"/>
</kw>
<kw name="Start Emulation" library="Remote">
<msg timestamp="20220602 02:54:24.237" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:24.347" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:24.237" endtime="20220602 02:54:24.347"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>LED OFF</arg>
<msg timestamp="20220602 02:54:24.347" level="TRACE">Arguments: [ 'LED OFF' ]</msg>
<msg timestamp="20220602 02:54:24.349" level="TRACE">Return: {'groups': [], 'line': 'LED OFF', 'timestamp': 0.259}</msg>
<status status="PASS" starttime="20220602 02:54:24.347" endtime="20220602 02:54:24.349"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>LED ON</arg>
<msg timestamp="20220602 02:54:24.350" level="TRACE">Arguments: [ 'LED ON' ]</msg>
<msg timestamp="20220602 02:54:25.176" level="TRACE">Return: {'groups': [], 'line': 'LED ON', 'timestamp': 500.212}</msg>
<status status="PASS" starttime="20220602 02:54:24.350" endtime="20220602 02:54:25.177"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>LED OFF</arg>
<msg timestamp="20220602 02:54:25.177" level="TRACE">Arguments: [ 'LED OFF' ]</msg>
<msg timestamp="20220602 02:54:26.102" level="TRACE">Return: {'groups': [], 'line': 'LED OFF', 'timestamp': 1010.346}</msg>
<status status="PASS" starttime="20220602 02:54:25.177" endtime="20220602 02:54:26.102"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>LED ON</arg>
<msg timestamp="20220602 02:54:26.102" level="TRACE">Arguments: [ 'LED ON' ]</msg>
<msg timestamp="20220602 02:54:27.107" level="TRACE">Return: {'groups': [], 'line': 'LED ON', 'timestamp': 1520.48}</msg>
<status status="PASS" starttime="20220602 02:54:26.102" endtime="20220602 02:54:27.107"/>
</kw>
<kw name="Test Teardown" library="renode-keywords" type="TEARDOWN">
<msg timestamp="20220602 02:54:27.107" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${CREATE_SNAPSHOT_ON_FAIL}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Create Snapshot Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:27.108" level="TRACE">Arguments: [ 'True' | 'Run Keyword If Test Failed' | 'Create Snapshot Of Failed Test' ]</msg>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Create Snapshot Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<msg timestamp="20220602 02:54:27.108" level="TRACE">Arguments: [ 'Create Snapshot Of Failed Test' ]</msg>
<msg timestamp="20220602 02:54:27.108" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:27.108" endtime="20220602 02:54:27.108"/>
</kw>
<msg timestamp="20220602 02:54:27.108" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:27.107" endtime="20220602 02:54:27.108"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${SAVE_LOG_ON_FAIL}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Save Log Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:27.108" level="TRACE">Arguments: [ 'True' | 'Run Keyword If Test Failed' | 'Save Log Of Failed Test' ]</msg>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Save Log Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<msg timestamp="20220602 02:54:27.109" level="TRACE">Arguments: [ 'Save Log Of Failed Test' ]</msg>
<msg timestamp="20220602 02:54:27.109" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:27.108" endtime="20220602 02:54:27.109"/>
</kw>
<msg timestamp="20220602 02:54:27.109" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:27.108" endtime="20220602 02:54:27.109"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${res}</var>
<arg>Import Library</arg>
<arg>Dialogs</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<msg timestamp="20220602 02:54:27.109" level="TRACE">Arguments: [ 'Import Library' | 'Dialogs' ]</msg>
<kw name="Import Library" library="BuiltIn">
<arg>Dialogs</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20220602 02:54:27.109" level="TRACE">Arguments: [ 'Dialogs' ]</msg>
<msg timestamp="20220602 02:54:27.111" level="TRACE">Return: None</msg>
<msg timestamp="20220602 02:54:27.111" level="FAIL">Importing library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'
Traceback (most recent call last):
  None
PYTHONPATH:
  /__w/_temp/renode/tests
  /usr/lib/python38.zip
  /usr/lib/python3.8
  /usr/lib/python3.8/lib-dynload
  /usr/local/lib/python3.8/dist-packages
  /usr/lib/python3/dist-packages</msg>
<msg timestamp="20220602 02:54:27.111" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20220602 02:54:27.109" endtime="20220602 02:54:27.111"/>
</kw>
<msg timestamp="20220602 02:54:27.111" level="TRACE">Return: ('FAIL',
 "Importing library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'\nTraceback (most recent call last):\n  None\nPYTHONPATH:\n  /__w/_temp/renode/tests\n  /usr/lib/python38.zip\n  /usr/lib/python3.8\n  /usr/lib/python3.8/lib-dynload\n  /usr/local/lib/python3.8/dist-packages\n  /usr/lib/python3/dist-packages")</msg>
<msg timestamp="20220602 02:54:27.111" level="INFO">${res} = ('FAIL', "Importing library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'\nTraceback (most recent call last):\n  None\nPYTHONPATH:\n  /__w/_temp/renode/tests\n  /usr...</msg>
<status status="PASS" starttime="20220602 02:54:27.109" endtime="20220602 02:54:27.111"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${HOLD_ON_ERROR}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Run Keywords</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' == 'FAIL'</arg>
<arg>Log</arg>
<arg>Couldn't load the Dialogs library - interactive debugging is not possible</arg>
<arg>console=True</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Open GUI</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Pause Execution</arg>
<arg>Test failed. Press OK once done debugging.</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Close GUI</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:27.111" level="TRACE">Arguments: [ 'False' | 'Run Keyword If Test Failed' | 'Run Keywords' | 'Run Keyword If' | "'${res[0]}' == 'FAIL'" | 'Log' | "Couldn't load the Dialogs library - interactive debugging is not possible" | 'console=True' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Open GUI' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Pause Execution' | 'Test failed. Press OK once done debugging.' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Close GUI' ]</msg>
<msg timestamp="20220602 02:54:27.112" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:27.111" endtime="20220602 02:54:27.112"/>
</kw>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20220602 02:54:27.112" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:27.117" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:27.112" endtime="20220602 02:54:27.117"/>
</kw>
<kw name="Clear Cached Log" library="Remote">
<msg timestamp="20220602 02:54:27.117" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:27.120" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:27.117" endtime="20220602 02:54:27.120"/>
</kw>
<msg timestamp="20220602 02:54:27.120" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:27.107" endtime="20220602 02:54:27.120"/>
</kw>
<status status="PASS" starttime="20220602 02:54:23.954" endtime="20220602 02:54:27.120"/>
</test>
<test id="s1-t3" name="Should Run DPP sample">
<kw name="Reset Emulation" library="Remote" type="SETUP">
<msg timestamp="20220602 02:54:27.122" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:27.126" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:27.122" endtime="20220602 02:54:27.126"/>
</kw>
<kw name="Prepare Sample">
<arg>%{ZEPHYR_QPC_DPP}</arg>
<msg timestamp="20220602 02:54:27.126" level="TRACE">Arguments: [ ${sample_name}='/__w/qpc-zephyr-integration/qpc-zephyr-integration/qpc-zephyr-port/apps/dpp/build/zephyr/zephyr.elf' ]</msg>
<kw name="Execute Command" library="Remote">
<arg>$bin="${sample_name}"</arg>
<msg timestamp="20220602 02:54:27.126" level="TRACE">Arguments: [ '$bin="/__w/qpc-zephyr-integration/qpc-zephyr-integration/qpc-zephyr-port/apps/dpp/build/zephyr/zephyr.elf"' ]</msg>
<msg timestamp="20220602 02:54:27.128" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:27.126" endtime="20220602 02:54:27.128"/>
</kw>
<kw name="Execute Script" library="Remote">
<arg>${SCRIPT}</arg>
<msg timestamp="20220602 02:54:27.128" level="TRACE">Arguments: [ '/__w/qpc-zephyr-integration/qpc-zephyr-integration/nrf52840.resc' ]</msg>
<msg timestamp="20220602 02:54:27.368" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:27.128" endtime="20220602 02:54:27.368"/>
</kw>
<kw name="Create Terminal Tester" library="Remote">
<arg>${UART}</arg>
<msg timestamp="20220602 02:54:27.369" level="TRACE">Arguments: [ 'sysbus.uart0' ]</msg>
<msg timestamp="20220602 02:54:27.371" level="TRACE">Return: 0</msg>
<status status="PASS" starttime="20220602 02:54:27.369" endtime="20220602 02:54:27.371"/>
</kw>
<msg timestamp="20220602 02:54:27.371" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:27.126" endtime="20220602 02:54:27.371"/>
</kw>
<kw name="Start Emulation" library="Remote">
<msg timestamp="20220602 02:54:27.371" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:27.481" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:27.371" endtime="20220602 02:54:27.481"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 0 is thinking</arg>
<msg timestamp="20220602 02:54:27.481" level="TRACE">Arguments: [ 'Philosopher 0 is thinking' ]</msg>
<msg timestamp="20220602 02:54:27.483" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 0 is thinking', 'timestamp': 0.5}</msg>
<status status="PASS" starttime="20220602 02:54:27.481" endtime="20220602 02:54:27.483"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 1 is thinking</arg>
<msg timestamp="20220602 02:54:27.483" level="TRACE">Arguments: [ 'Philosopher 1 is thinking' ]</msg>
<msg timestamp="20220602 02:54:27.485" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 1 is thinking', 'timestamp': 0.5}</msg>
<status status="PASS" starttime="20220602 02:54:27.483" endtime="20220602 02:54:27.485"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 2 is thinking</arg>
<msg timestamp="20220602 02:54:27.485" level="TRACE">Arguments: [ 'Philosopher 2 is thinking' ]</msg>
<msg timestamp="20220602 02:54:27.487" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 2 is thinking', 'timestamp': 0.5}</msg>
<status status="PASS" starttime="20220602 02:54:27.485" endtime="20220602 02:54:27.487"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 3 is thinking</arg>
<msg timestamp="20220602 02:54:27.487" level="TRACE">Arguments: [ 'Philosopher 3 is thinking' ]</msg>
<msg timestamp="20220602 02:54:27.489" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 3 is thinking', 'timestamp': 0.6}</msg>
<status status="PASS" starttime="20220602 02:54:27.487" endtime="20220602 02:54:27.489"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 4 is thinking</arg>
<msg timestamp="20220602 02:54:27.489" level="TRACE">Arguments: [ 'Philosopher 4 is thinking' ]</msg>
<msg timestamp="20220602 02:54:27.490" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 4 is thinking', 'timestamp': 0.6}</msg>
<status status="PASS" starttime="20220602 02:54:27.489" endtime="20220602 02:54:27.491"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 0 is hungry</arg>
<msg timestamp="20220602 02:54:27.491" level="TRACE">Arguments: [ 'Philosopher 0 is hungry' ]</msg>
<msg timestamp="20220602 02:54:28.599" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 0 is hungry  ', 'timestamp': 592.8}</msg>
<status status="PASS" starttime="20220602 02:54:27.491" endtime="20220602 02:54:28.599"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 0 is eating</arg>
<msg timestamp="20220602 02:54:28.599" level="TRACE">Arguments: [ 'Philosopher 0 is eating' ]</msg>
<msg timestamp="20220602 02:54:30.961" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 0 is eating  ', 'timestamp': 1837.905}</msg>
<status status="PASS" starttime="20220602 02:54:28.599" endtime="20220602 02:54:30.961"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 0 is thinking</arg>
<msg timestamp="20220602 02:54:30.962" level="TRACE">Arguments: [ 'Philosopher 0 is thinking' ]</msg>
<msg timestamp="20220602 02:54:32.384" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 0 is thinking', 'timestamp': 2511.736}</msg>
<status status="PASS" starttime="20220602 02:54:30.961" endtime="20220602 02:54:32.384"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 1 is hungry</arg>
<msg timestamp="20220602 02:54:32.384" level="TRACE">Arguments: [ 'Philosopher 1 is hungry' ]</msg>
<msg timestamp="20220602 02:54:35.308" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 1 is hungry  ', 'timestamp': 4043.127}</msg>
<status status="PASS" starttime="20220602 02:54:32.384" endtime="20220602 02:54:35.308"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 1 is eating</arg>
<msg timestamp="20220602 02:54:35.308" level="TRACE">Arguments: [ 'Philosopher 1 is eating' ]</msg>
<msg timestamp="20220602 02:54:36.313" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 1 is eating  ', 'timestamp': 4533.0}</msg>
<status status="PASS" starttime="20220602 02:54:35.308" endtime="20220602 02:54:36.313"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 1 is thinking</arg>
<msg timestamp="20220602 02:54:36.313" level="TRACE">Arguments: [ 'Philosopher 1 is thinking' ]</msg>
<msg timestamp="20220602 02:54:37.941" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 1 is thinking', 'timestamp': 5329.152}</msg>
<status status="PASS" starttime="20220602 02:54:36.313" endtime="20220602 02:54:37.941"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 2 is hungry</arg>
<msg timestamp="20220602 02:54:37.942" level="TRACE">Arguments: [ 'Philosopher 2 is hungry' ]</msg>
<msg timestamp="20220602 02:54:40.674" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 2 is hungry  ', 'timestamp': 6625.7}</msg>
<status status="PASS" starttime="20220602 02:54:37.942" endtime="20220602 02:54:40.674"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 2 is eating</arg>
<msg timestamp="20220602 02:54:40.675" level="TRACE">Arguments: [ 'Philosopher 2 is eating' ]</msg>
<msg timestamp="20220602 02:54:42.502" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 2 is eating  ', 'timestamp': 7554.5}</msg>
<status status="PASS" starttime="20220602 02:54:40.675" endtime="20220602 02:54:42.502"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 2 is thinking</arg>
<msg timestamp="20220602 02:54:42.502" level="TRACE">Arguments: [ 'Philosopher 2 is thinking' ]</msg>
<msg timestamp="20220602 02:54:44.296" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 2 is thinking', 'timestamp': 8401.742}</msg>
<status status="PASS" starttime="20220602 02:54:42.502" endtime="20220602 02:54:44.296"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 3 is hungry</arg>
<msg timestamp="20220602 02:54:44.297" level="TRACE">Arguments: [ 'Philosopher 3 is hungry' ]</msg>
<msg timestamp="20220602 02:54:47.646" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 3 is hungry  ', 'timestamp': 10055.443}</msg>
<status status="PASS" starttime="20220602 02:54:44.296" endtime="20220602 02:54:47.646"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 3 is eating</arg>
<msg timestamp="20220602 02:54:47.647" level="TRACE">Arguments: [ 'Philosopher 3 is eating' ]</msg>
<msg timestamp="20220602 02:54:48.322" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 3 is eating  ', 'timestamp': 10412.8}</msg>
<status status="PASS" starttime="20220602 02:54:47.647" endtime="20220602 02:54:48.323"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 3 is thinking</arg>
<msg timestamp="20220602 02:54:48.323" level="TRACE">Arguments: [ 'Philosopher 3 is thinking' ]</msg>
<msg timestamp="20220602 02:54:50.063" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 3 is thinking', 'timestamp': 11280.354}</msg>
<status status="PASS" starttime="20220602 02:54:48.323" endtime="20220602 02:54:50.063"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 4 is hungry</arg>
<msg timestamp="20220602 02:54:50.064" level="TRACE">Arguments: [ 'Philosopher 4 is hungry' ]</msg>
<msg timestamp="20220602 02:54:51.926" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 4 is hungry  ', 'timestamp': 12199.124}</msg>
<status status="PASS" starttime="20220602 02:54:50.064" endtime="20220602 02:54:51.926"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 4 is eating</arg>
<msg timestamp="20220602 02:54:51.927" level="TRACE">Arguments: [ 'Philosopher 4 is eating' ]</msg>
<msg timestamp="20220602 02:54:52.685" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 4 is eating  ', 'timestamp': 12566.7}</msg>
<status status="PASS" starttime="20220602 02:54:51.927" endtime="20220602 02:54:52.686"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Philosopher 4 is thinking</arg>
<msg timestamp="20220602 02:54:52.686" level="TRACE">Arguments: [ 'Philosopher 4 is thinking' ]</msg>
<msg timestamp="20220602 02:54:54.501" level="TRACE">Return: {'groups': [], 'line': 'Philosopher 4 is thinking', 'timestamp': 13485.348}</msg>
<status status="PASS" starttime="20220602 02:54:52.686" endtime="20220602 02:54:54.501"/>
</kw>
<kw name="Test Teardown" library="renode-keywords" type="TEARDOWN">
<msg timestamp="20220602 02:54:54.501" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${CREATE_SNAPSHOT_ON_FAIL}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Create Snapshot Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:54.502" level="TRACE">Arguments: [ 'True' | 'Run Keyword If Test Failed' | 'Create Snapshot Of Failed Test' ]</msg>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Create Snapshot Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<msg timestamp="20220602 02:54:54.502" level="TRACE">Arguments: [ 'Create Snapshot Of Failed Test' ]</msg>
<msg timestamp="20220602 02:54:54.502" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:54.502" endtime="20220602 02:54:54.502"/>
</kw>
<msg timestamp="20220602 02:54:54.502" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:54.501" endtime="20220602 02:54:54.502"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${SAVE_LOG_ON_FAIL}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Save Log Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:54.502" level="TRACE">Arguments: [ 'True' | 'Run Keyword If Test Failed' | 'Save Log Of Failed Test' ]</msg>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Save Log Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<msg timestamp="20220602 02:54:54.502" level="TRACE">Arguments: [ 'Save Log Of Failed Test' ]</msg>
<msg timestamp="20220602 02:54:54.503" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:54.502" endtime="20220602 02:54:54.503"/>
</kw>
<msg timestamp="20220602 02:54:54.503" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:54.502" endtime="20220602 02:54:54.503"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${res}</var>
<arg>Import Library</arg>
<arg>Dialogs</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<msg timestamp="20220602 02:54:54.503" level="TRACE">Arguments: [ 'Import Library' | 'Dialogs' ]</msg>
<kw name="Import Library" library="BuiltIn">
<arg>Dialogs</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20220602 02:54:54.503" level="TRACE">Arguments: [ 'Dialogs' ]</msg>
<msg timestamp="20220602 02:54:54.505" level="TRACE">Return: None</msg>
<msg timestamp="20220602 02:54:54.505" level="FAIL">Importing library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'
Traceback (most recent call last):
  None
PYTHONPATH:
  /__w/_temp/renode/tests
  /usr/lib/python38.zip
  /usr/lib/python3.8
  /usr/lib/python3.8/lib-dynload
  /usr/local/lib/python3.8/dist-packages
  /usr/lib/python3/dist-packages</msg>
<msg timestamp="20220602 02:54:54.505" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20220602 02:54:54.503" endtime="20220602 02:54:54.505"/>
</kw>
<msg timestamp="20220602 02:54:54.505" level="TRACE">Return: ('FAIL',
 "Importing library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'\nTraceback (most recent call last):\n  None\nPYTHONPATH:\n  /__w/_temp/renode/tests\n  /usr/lib/python38.zip\n  /usr/lib/python3.8\n  /usr/lib/python3.8/lib-dynload\n  /usr/local/lib/python3.8/dist-packages\n  /usr/lib/python3/dist-packages")</msg>
<msg timestamp="20220602 02:54:54.505" level="INFO">${res} = ('FAIL', "Importing library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'\nTraceback (most recent call last):\n  None\nPYTHONPATH:\n  /__w/_temp/renode/tests\n  /usr...</msg>
<status status="PASS" starttime="20220602 02:54:54.503" endtime="20220602 02:54:54.505"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${HOLD_ON_ERROR}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Run Keywords</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' == 'FAIL'</arg>
<arg>Log</arg>
<arg>Couldn't load the Dialogs library - interactive debugging is not possible</arg>
<arg>console=True</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Open GUI</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Pause Execution</arg>
<arg>Test failed. Press OK once done debugging.</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Close GUI</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220602 02:54:54.505" level="TRACE">Arguments: [ 'False' | 'Run Keyword If Test Failed' | 'Run Keywords' | 'Run Keyword If' | "'${res[0]}' == 'FAIL'" | 'Log' | "Couldn't load the Dialogs library - interactive debugging is not possible" | 'console=True' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Open GUI' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Pause Execution' | 'Test failed. Press OK once done debugging.' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Close GUI' ]</msg>
<msg timestamp="20220602 02:54:54.506" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:54.505" endtime="20220602 02:54:54.506"/>
</kw>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20220602 02:54:54.506" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:54.521" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:54.506" endtime="20220602 02:54:54.522"/>
</kw>
<kw name="Clear Cached Log" library="Remote">
<msg timestamp="20220602 02:54:54.522" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220602 02:54:54.525" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220602 02:54:54.522" endtime="20220602 02:54:54.525"/>
</kw>
<msg timestamp="20220602 02:54:54.526" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:54.501" endtime="20220602 02:54:54.526"/>
</kw>
<status status="PASS" starttime="20220602 02:54:27.122" endtime="20220602 02:54:54.526"/>
</test>
<kw name="Teardown" library="renode-keywords" type="TEARDOWN">
<msg timestamp="20220602 02:54:54.527" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${SKIP_RUNNING_SERVER}</arg>
<arg>Stop Remote Server</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<msg timestamp="20220602 02:54:54.527" level="TRACE">Arguments: [ 'True' | 'Stop Remote Server' ]</msg>
<msg timestamp="20220602 02:54:54.527" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:54.527" endtime="20220602 02:54:54.528"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${SKIP_RUNNING_SERVER}</arg>
<arg>Wait For Process</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<msg timestamp="20220602 02:54:54.528" level="TRACE">Arguments: [ 'True' | 'Wait For Process' ]</msg>
<msg timestamp="20220602 02:54:54.528" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:54.528" endtime="20220602 02:54:54.528"/>
</kw>
<msg timestamp="20220602 02:54:54.528" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220602 02:54:54.527" endtime="20220602 02:54:54.528"/>
</kw>
<meta name="HotSpot_Action">-</meta>
<status status="PASS" starttime="20220602 02:54:16.561" endtime="20220602 02:54:54.528"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Test Suite">Test Suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
